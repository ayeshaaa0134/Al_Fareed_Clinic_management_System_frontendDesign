<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EtKgJA83RL5SUk5Oq+ZzyxhjPd1x7UQcVUrKM4ISDstHm+K4VlGqdT6hkTHW31XqVVGqnSgvNmZ9166o
        IiiMMWZxBIWgMMaYlRGUkAZFvgnbSa2q1Op187lljLGerlKviXKtorzcnPNdu6Iq1EFZLeyK00ZdqTca
        5nPLGGM9nbwOea9Lr7fmfdeuqCIojDFmcQSFoDDGmJURlJAGZfYgI3KVoiJvbsxXSwDQN/I65L0uTW5w
        HwoAAG0hKAAAKwgKAMAKggIAsIKgAACsICgAACsICgDACoICALCCoAAArCAoAAArCAoAwAqCAgCwgqAA
        AKwgKAAAKwgKAMAKggIAsIKgAACsICgAACsICgDACoICALCCoAAArCAoAAArCAoAwAqCAgCwgqAAAKwg
        KAAAKwgKAMAKggIAsIKgAACsICgAACsICgDACoICALCCoAAArCAoAAArCAoAwAqCAgCwgqAAAKwgKAAA
        KwgKAMAKggIAsIKgAACsICgAACsICgDACoICALCCoAAArCAoAAArCAoAwAqCAgCwgqAAAKwgKAAAKwgK
        AMAKggIAsIKgAACsICgAACsICgDACoICALCCoAAArCAoAAArCAoAwAqCAgCwgqAAAKwgKAAAKwgKAMAK
        ggIAsIKgAACsICgAACsICgDACoICALCCoAAArCAoAAArCAoAwAqCAgCwgqAAAKwgKAAAKwgKAMCKZlD+
        a/hWMyoAAFxUMygAAHTq/wGFco7BpFUV1AAAAABJRU5ErkJggg==
</value>
  </data>
</root>